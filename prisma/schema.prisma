generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cheering_Message {
  cheeringMessageId Int      @id @unique @default(autoincrement())
  cheeringMessage   String   @db.VarChar(100)
  isGoalExisted     Boolean?
}

model Daily_Achieved_History {
  achievedId    Int       @id @unique @default(autoincrement())
  achievedAt    DateTime? @default(now()) @db.Timestamp(6)
  achievedMonth String?   @db.VarChar(50)
  goalId        Int
  Goal          Goal      @relation(fields: [goalId], references: [goalId], onDelete: Cascade, map: "goal_id")
}

model Goal {
  goalId                 Int                      @id @default(autoincrement())
  isMore                 Boolean
  isOngoing              Boolean                  @default(true)
  totalCount             Int                      @default(0)
  startedAt              DateTime                 @default(now()) @db.Timestamp(6)
  keptAt                 DateTime?                @db.Timestamp(6)
  isAchieved             Boolean                  @default(false)
  criterion              String?                  @db.VarChar(20)
  food                   String                   @db.VarChar(15)
  writerId               Int
  achievedAt             DateTime?                @db.Timestamp(6)
  Daily_Achieved_History Daily_Achieved_History[]
  User                   User                     @relation(fields: [writerId], references: [userId], onDelete: Cascade, map: "writer_id")
}

model User {
  userId       Int     @id @default(autoincrement())
  email        String  @db.VarChar(100)
  platformType String  @db.VarChar(100)
  refreshToken String? @db.VarChar(500)
  name         String? @db.VarChar(50)
  Goal         Goal[]
}

model Version_Info {
  versionId Int    @id @default(autoincrement())
  version   String @db.VarChar(20)
  osType    String @db.VarChar(20)
}
