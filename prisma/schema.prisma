generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model test {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(100)
}

model Cheering_Message {
  cheeringMessageId Int    @id @default(autoincrement())
  cheeringMessage   String @db.VarChar(100)
}

model Daily_Achieved_History {
  dailyAchievedId Int      @id @default(autoincrement())
  achievedAt      DateTime
  goalId          Int
  Goal            Goal     @relation(fields: [goalId], references: [goalId], onDelete: NoAction, onUpdate: NoAction, map: "goal_id")
}

model Goal {
  goalId                   Int                        @id @default(autoincrement())
  goalContent              String                     @db.VarChar(200)
  isMore                   Boolean
  isOngoing                Boolean                    @default(true)
  totalCount               Int                        @default(0)
  startedAt                DateTime                   @default(now())
  kept_at                  DateTime?
  isAchieved               Boolean                    @default(false)
  writerId                 Int
  Daily_Achieved_History   Daily_Achieved_History[]
  User                     User                       @relation(fields: [writerId], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "writer_id")
  Monthly_Achieved_History Monthly_Achieved_History[]
}

model Monthly_Achieved_History {
  monthlyAchievedHistoryId Int    @id @default(autoincrement())
  monthlyAchievedAt        String @db.VarChar(100)
  monthlyCount             Int
  goalId                   Int?
  Goal                     Goal?  @relation(fields: [goalId], references: [goalId], onDelete: NoAction, onUpdate: NoAction, map: "Monthly_Achieved_History_Goal_null_fk")
}

model User {
  userId       Int    @id(map: "table_name_pkey") @default(autoincrement())
  email        String @db.VarChar(100)
  platformType String @db.VarChar(100)
  Goal         Goal[]
}
